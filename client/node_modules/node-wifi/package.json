{
  "_args": [
    [
      {
        "raw": "node-wifi",
        "scope": null,
        "escapedName": "node-wifi",
        "name": "node-wifi",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\Clients\\Self\\esp8266-discovery\\client"
    ]
  ],
  "_from": "node-wifi@latest",
  "_id": "node-wifi@1.2.5",
  "_inCache": true,
  "_location": "/node-wifi",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/node-wifi-1.2.5.tgz_1498762852197_0.8609732633922249"
  },
  "_npmUser": {
    "name": "friedrit",
    "email": "tf@elqui.fr"
  },
  "_npmVersion": "3.10.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-wifi",
    "scope": null,
    "escapedName": "node-wifi",
    "name": "node-wifi",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/node-wifi/-/node-wifi-1.2.5.tgz",
  "_shasum": "0c2925776db690eb1150060caac99be446ba2ebf",
  "_shrinkwrap": null,
  "_spec": "node-wifi",
  "_where": "D:\\Clients\\Self\\esp8266-discovery\\client",
  "author": "",
  "bin": {
    "wifi": "bin/wifi.js"
  },
  "bugs": {
    "url": "https://github.com/elqui-app/node-wifi/issues"
  },
  "dependencies": {
    "command-line-args": "^3.0.1",
    "command-line-usage": "^3.0.3"
  },
  "description": "NodeJS tool to manage wifi",
  "devDependencies": {
    "dotenv": "^4.0.0"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "0c2925776db690eb1150060caac99be446ba2ebf",
    "tarball": "https://registry.npmjs.org/node-wifi/-/node-wifi-1.2.5.tgz"
  },
  "gitHead": "141ca2d3e84775ca82100c87639aa973e3f55379",
  "homepage": "https://github.com/elqui-app/node-wifi#readme",
  "keywords": [
    "wifi",
    "multiplatform"
  ],
  "license": "LGPL-3.0",
  "main": "src/wifi.js",
  "maintainers": [
    {
      "name": "friedrit",
      "email": "tf@elqui.fr"
    }
  ],
  "name": "node-wifi",
  "optionalDependencies": {},
  "readme": "\r\nnode-wifi\r\n===================\r\n\r\n\r\nThe node-wifi module allows mac, windows and linux users to interact with surrounding wifi networks through various methods.\r\n\r\nThese methods include scanning for wifi access points and connecting to these access points.\r\n\r\nWe wish to be clear in saying that this module is inspired from [node-wifi-control](https://github.com/msolters/wifi-control-node) but with some slight modifications to certain functions such as the various OS-specific parsers for terminal output as we noticed that these parsers did not work well on certain operating systems.\r\n\r\nThe module manages :\r\n\r\n* Connect for linux | mac | windows\r\n* Scan for linux | mac | windows\r\n* List the current wifi connections for linux | mac\r\n* Disconnect for linux\r\n\r\n> As everything with hardware dependency, weird behaviors may happen depending of your configuration. You should never hesitate to notify us about a specificity of your OS/Hardware/Wifi card/whatever.\r\n\r\n----------\r\n\r\nInstall\r\n-------------\r\n\r\n```javascript\r\n// Use as a module\r\nnpm install node-wifi\r\n\r\n// Use as a CLI\r\nnpm install node-wifi -g\r\n```\r\n\r\nGetting started\r\n-------------\r\n\r\n```javascript\r\nvar wifi = require('node-wifi');\r\n\r\n// Initialize wifi module\r\n// Absolutely necessary even to set interface to null\r\nwifi.init({\r\n    iface : null // network interface, choose a random wifi interface if set to null\r\n});\r\n\r\n// Scan networks\r\nwifi.scan(function(err, networks) {\r\n    if (err) {\r\n        console.log(err);\r\n    } else {\r\n        console.log(networks);\r\n        /*\r\n        networks = [\r\n            {\r\n                ssid: '...',\r\n                mac: '...',\r\n                frequency: <number>, // in MHz\r\n                signal_level: <number>, // in dB\r\n                security: '...' // unfortunately the format still depends of the OS\r\n            },\r\n            ...\r\n        ];\r\n        */\r\n    }\r\n});\r\n\r\n// Connect to a network\r\nwifi.connect({ ssid : \"ssid\", password : \"password\"}, function(err) {\r\n    if (err) {\r\n        console.log(err);\r\n    }\r\n    console.log('Connected');\r\n});\r\n\r\n// Disconnect from a network\r\n// not available on all os for now\r\nwifi.disconnect(function(err) {\r\n    if (err) {\r\n        console.log(err);\r\n    }\r\n    console.log('Disconnected');\r\n});\r\n\r\n// Disconnect from a network\r\n// not available on all os for now\r\nwifi.getCurrentConnections(function(err, currentConnections) {\r\n    if (err) {\r\n        console.log(err);\r\n    }\r\n    console.log(currentConnections);\r\n    /*\r\n    // you may have several connections\r\n    [\r\n        {\r\n            iface: '...', // network interface used for the connection, not available on macOS\r\n            ssid: '...',\r\n            mac: '...',\r\n            frequency: <number>, // in MHz\r\n            signal_level: <number>, // in dB\r\n            security: '...' // not available on linux\r\n        }\r\n    ]\r\n    */\r\n});\r\n\r\n```\r\n\r\nUse as CLI\r\n-------------\r\n\r\n```javascript\r\nwifi --scan\r\n\r\nwifi --connect --ssid <ssid> --password <password> [--iface <wlan0>]\r\n\r\nwifi --disconnect\r\n\r\nwifi --current\r\n```\r\n\r\nDependencies\r\n-------------\r\n\r\nLinux:\r\n* network-manager\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/elqui-app/node-wifi.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.2.5"
}
